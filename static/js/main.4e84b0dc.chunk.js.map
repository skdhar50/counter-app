{"version":3,"sources":["components/counter-list.component.jsx","components/reset.component.jsx","components/counter.component.jsx","components/navbar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["classes","custom","marginLeft","fontSize","myBadge","padding","CounterList","props","className","Badge","bg","style","value","Button","variant","onClick","onIncrement","id","onDecrement","disabled","onDelete","Reset","onReset","Counter","counters","map","counter","handleIncrement","handleDecrement","handleDelete","handleReset","Navbar","Container","Brand","href","nonZeroInputs","INITIAL_STATE","traverseStateCounters","state","type","App","setState","countNonzeroCounters","cnt","forEach","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKMA,EAAU,CACZC,OAAQ,CACJC,WAAY,OACZC,SAAU,QAEdC,QAAS,CACLC,QAAS,OACTF,SAAU,SAqCHG,EAjCK,SAACC,GACjB,OACI,qBAAIC,UAAY,oBAAhB,UACI,cAACC,EAAA,EAAD,CAAOC,GAAK,UAAUC,MAAQX,EAAQI,QAAtC,SACKG,EAAMK,QAGX,cAACC,EAAA,EAAD,CACIC,QAAU,UACVH,MAASX,EAAQC,OACjBc,QAAW,kBAAMR,EAAMS,YAAYT,EAAMU,KAH7C,eAOA,cAACJ,EAAA,EAAD,CACIC,QAAQ,UACRH,MAASX,EAAQC,OACjBc,QAAW,kBAAMR,EAAMW,YAAYX,EAAMU,KACzCE,SAA4B,IAAhBZ,EAAMK,MAJtB,eAQA,cAACC,EAAA,EAAD,CACIC,QAAU,SACVH,MAASX,EAAQC,OACjBc,QAAW,kBAAMR,EAAMa,SAASb,EAAMU,KAH1C,wBCxBGI,EAXD,SAACd,GACX,OACI,cAACM,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAS,kBAAMR,EAAMe,WAFzB,oBCyBOC,EA1BC,SAAChB,GAEb,OACI,sBAAKC,UAAU,wCAAf,UACI,oBAAIA,UAAU,OAAd,SAEQD,EAAMiB,SAASC,KAAI,SAACC,GAChB,OACI,cAAC,EAAD,CAEIT,GAAIS,EAAQT,GACZL,MAAOc,EAAQd,MACfI,YAAaT,EAAMoB,gBACnBT,YAAaX,EAAMqB,gBACnBR,SAAUb,EAAMsB,cALXH,EAAQT,SAYjC,cAAC,EAAD,CAAOK,QAASf,EAAMuB,kB,gBCNnBC,EAdA,SAACxB,GACZ,OACI,cAAC,IAAD,CAAKG,GAAG,QAAQI,QAAQ,QAAxB,SACI,cAACkB,EAAA,EAAD,UACI,cAAC,IAAIC,MAAL,CAAWC,KAAK,IAAhB,SACI,yCACW,cAACzB,EAAA,EAAD,CAAOC,GAAG,YAAV,SAAuBH,EAAM4B,0BCNtDC,EAAgB,CACpB,CAACnB,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,IAIjB,SAASyB,EAAsBC,EAAOrB,EAAIsB,GAmBxC,OAlBgBD,EAAMb,KAAI,SAAAC,GACtB,GAAIA,EAAQT,KAAOA,EAcf,OAAOS,EAZP,OAAQa,GACJ,IAAK,YACD,MAAO,CAAEtB,GAAIA,EAAIL,MAAOc,EAAQd,MAAQ,GAC5C,IAAK,YACD,MAAO,CAAEK,GAAIA,EAAIL,MAAOc,EAAQd,MAAQ,GAC5C,IAAK,SACD,MAAO,CAAEK,GAAIA,EAAIL,MAAO,GAC5B,QACI,OAAOc,M,IAuEVc,E,kDA5Db,aAAe,IAAD,8BACZ,gBAOFV,YAAc,WACV,EAAKW,SAAS,CAAEjB,SAAUY,KAThB,EAadT,gBAAkB,SAACV,GACf,EAAKwB,SAAS,CACVjB,SAAUa,EAAsB,EAAKC,MAAMd,SAAUP,EAAI,gBAfnD,EAoBdW,gBAAkB,SAACX,GACf,EAAKwB,SAAS,CACVjB,SAAUa,EAAsB,EAAKC,MAAMd,SAAUP,EAAI,gBAtBnD,EA2BdY,aAAe,SAACZ,GACZ,EAAKwB,SAAS,CACVjB,SAAUa,EAAsB,EAAKC,MAAMd,SAAUP,EAAI,aA7BnD,EAkCdyB,qBAAuB,WACrB,IAAIC,EAAM,EAMV,OALA,EAAKL,MAAMd,SAASoB,SAAQ,SAAClB,GACvBA,EAAQd,MAAQ,GAClB+B,OAGGA,GAvCP,EAAKL,MAAQ,CACXd,SAAUY,GAHA,E,0CA4Cf,WACG,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQ2B,cAAeU,KAAKH,yBAC5B,cAAC,EAAD,CACIlB,SAAUqB,KAAKP,MAAMd,SACrBG,gBAAiBkB,KAAKlB,gBACtBC,gBAAiBiB,KAAKjB,gBACtBC,aAAcgB,KAAKhB,aACnBC,YAAae,KAAKf,qB,GAtDZgB,aCxBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e84b0dc.chunk.js","sourcesContent":["import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\n\n// Settting up some custom styling\nconst classes = {\n    custom: {\n        marginLeft: \"15px\",\n        fontSize: \"20px\"\n    },\n    myBadge: {\n        padding: \"10px\",\n        fontSize: \"20px\"\n    }\n}\n\nconst CounterList = (props) => {\n    return (\n        <li className = \"list-unstyled p-2\">\n            <Badge bg = \"primary\" style={ classes.myBadge }>\n                {props.value}\n            </Badge>\n\n            <Button\n                variant = \"warning\"\n                style = {classes.custom}\n                onClick = {() => props.onIncrement(props.id)}\n            >\n                +\n            </Button>\n            <Button\n                variant=\"warning\"\n                style = {classes.custom}\n                onClick = {() => props.onDecrement(props.id)}\n                disabled = {props.value === 0 ? true : false}\n            >\n                -\n            </Button>\n            <Button\n                variant = \"danger\"\n                style = {classes.custom}\n                onClick = {() => props.onDelete(props.id)}\n            >\n                Delete\n            </Button>\n        </li>\n    );\n}\n\nexport default CounterList;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst Reset = (props) => {\n    return (\n        <Button\n            variant=\"primary\"\n            onClick={() => props.onReset()}\n        >\n            Reset\n        </Button>\n    );\n}\n\nexport default Reset;","import React from 'react';\nimport CounterList from './counter-list.component';\nimport Reset from './reset.component';\n\nconst Counter = (props) => {\n    \n    return (\n        <div className=\"d-flex flex-column align-items-center\">\n            <ul className=\"mt-4\">\n                {\n                    props.counters.map((counter) => {\n                        return (\n                            <CounterList \n                                key={counter.id}\n                                id={counter.id}\n                                value={counter.value}\n                                onIncrement={props.handleIncrement}\n                                onDecrement={props.handleDecrement}\n                                onDelete={props.handleDelete}\n                            />\n                        )\n                    })\n                }\n            </ul>\n\n            <Reset onReset={props.handleReset} />\n        </div>\n    );\n};\n\nexport default Counter;","import React from 'react';\nimport Nav from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Badge from \"react-bootstrap/Badge\";\n\nconst Navbar = (props) => {\n    return (\n        <Nav bg=\"light\" variant=\"light\">\n            <Container>\n                <Nav.Brand href=\"#\">\n                    <h2>\n                        Navbar <Badge bg=\"secondary\">{props.nonZeroInputs}</Badge>\n                    </h2>\n                </Nav.Brand>\n            </Container>\n        </Nav>\n    );\n}\n\nexport default Navbar;","import { React, Component } from 'react';\nimport Counter from './components/counter.component';\nimport Navbar from './components/navbar.component';\n\n// Initial values for our state\nconst INITIAL_STATE = [\n  {id: 0, value: 0},\n  {id: 1, value: 0},\n  {id: 2, value: 0},\n  {id: 3, value: 0},\n  {id: 4, value: 0}\n]\n\n// Function to travers the counters state\nfunction traverseStateCounters(state, id, type) {\n  const counter = state.map(counter => {\n      if( counter.id === id ) {\n          // Handles the increment, decrement and delete operations\n          switch( type ) {\n              case 'INCREMENT':\n                  return { id: id, value: counter.value + 1 };\n              case 'DECREMENT':\n                  return { id: id, value: counter.value - 1 };\n              case 'DELETE':\n                  return { id: id, value: 0 };\n              default:\n                  return counter;\n          }\n      }\n      else\n          return counter;\n  });\n\n  return counter;\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counters: INITIAL_STATE\n    }\n  }\n\n  // Resetting to the initial state\n  handleReset = () => {\n      this.setState({ counters: INITIAL_STATE });\n  }\n\n  // Function to handle the increment \n  handleIncrement = (id) => {\n      this.setState({\n          counters: traverseStateCounters(this.state.counters, id, \"INCREMENT\")\n      });\n  }\n\n  // Function to handle the decrement\n  handleDecrement = (id) => {\n      this.setState({\n          counters: traverseStateCounters(this.state.counters, id, \"DECREMENT\")\n      });\n  }\n\n  // Function to handle the delete\n  handleDelete = (id) => {\n      this.setState({\n          counters: traverseStateCounters(this.state.counters, id, \"DELETE\")\n      });\n  }\n\n  // Function to count non-zero elements\n  countNonzeroCounters = () => {\n    let cnt = 0;\n    this.state.counters.forEach((counter) => {\n      if( counter.value > 0 )\n        cnt++;\n    })\n\n    return cnt;\n  }\n\n\trender() {\n    return (\n      <div className=\"App\">\n        <Navbar nonZeroInputs={this.countNonzeroCounters()} />\n        <Counter\n            counters={this.state.counters}\n            handleIncrement={this.handleIncrement}\n            handleDecrement={this.handleDecrement}\n            handleDelete={this.handleDelete}\n            handleReset={this.handleReset}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}