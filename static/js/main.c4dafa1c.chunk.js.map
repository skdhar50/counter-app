{"version":3,"sources":["components/counter-list.component.jsx","components/counter.component.jsx","components/navbar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["classes","custom","marginLeft","fontSize","myBadge","padding","CounterList","props","className","Badge","bg","style","value","Button","variant","onClick","onIncrement","id","onDecrement","disabled","onDelete","INITIAL_STATE","traverseStateCounters","state","type","map","counter","Counter","handleReset","setState","counters","handleIncrement","handleDecrement","handleDelete","this","Component","Navbar","Container","Brand","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKMA,EAAU,CACZC,OAAQ,CACJC,WAAY,OACZC,SAAU,QAEdC,QAAS,CACLC,QAAS,OACTF,SAAU,SAqCHG,EAjCK,SAACC,GACjB,OACI,qBAAIC,UAAY,oBAAhB,UACI,cAACC,EAAA,EAAD,CAAOC,GAAK,UAAUC,MAAQX,EAAQI,QAAtC,SACKG,EAAMK,QAGX,cAACC,EAAA,EAAD,CACIC,QAAU,UACVH,MAASX,EAAQC,OACjBc,QAAW,kBAAMR,EAAMS,YAAYT,EAAMU,KAH7C,eAOA,cAACJ,EAAA,EAAD,CACIC,QAAQ,UACRH,MAASX,EAAQC,OACjBc,QAAW,kBAAMR,EAAMW,YAAYX,EAAMU,KACzCE,SAA4B,IAAhBZ,EAAMK,MAJtB,eAQA,cAACC,EAAA,EAAD,CACIC,QAAU,SACVH,MAASX,EAAQC,OACjBc,QAAW,kBAAMR,EAAMa,SAASb,EAAMU,KAH1C,wBCjCNI,EAAgB,CAClB,CAACJ,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,GACf,CAACK,GAAI,EAAGL,MAAO,IAInB,SAASU,EAAsBC,EAAON,EAAIO,GAmBtC,OAlBgBD,EAAME,KAAI,SAAAC,GACtB,GAAIA,EAAQT,KAAOA,EAcf,OAAOS,EAZP,OAAQF,GACJ,IAAK,YACD,MAAO,CAAEP,GAAIA,EAAIL,MAAOc,EAAQd,MAAQ,GAC5C,IAAK,YACD,MAAO,CAAEK,GAAIA,EAAIL,MAAOc,EAAQd,MAAQ,GAC5C,IAAK,SACD,MAAO,CAAEK,GAAIA,EAAIL,MAAO,GAC5B,QACI,OAAOc,M,IA2EZC,E,kDAhEX,aAAe,IAAD,8BACV,gBAOJC,YAAc,WACV,EAAKC,SAAS,CAAEC,SAAUT,KAThB,EAadU,gBAAkB,SAACd,GACf,EAAKY,SAAS,CACVC,SAAUR,EAAsB,EAAKC,MAAMO,SAAUb,EAAI,gBAfnD,EAoBde,gBAAkB,SAACf,GACf,EAAKY,SAAS,CACVC,SAAUR,EAAsB,EAAKC,MAAMO,SAAUb,EAAI,gBAtBnD,EA2BdgB,aAAe,SAAChB,GACZ,EAAKY,SAAS,CACVC,SAAUR,EAAsB,EAAKC,MAAMO,SAAUb,EAAI,aA3B7D,EAAKM,MAAQ,CACXO,SAAUT,GAHF,E,0CAiCd,WAAU,IAAD,OACL,OACI,sBAAKb,UAAU,wCAAf,UACI,oBAAIA,UAAU,OAAd,SAEQ0B,KAAKX,MAAMO,SAASL,KAAI,SAACC,GACrB,OACI,cAAC,EAAD,CAEIT,GAAIS,EAAQT,GACZL,MAAOc,EAAQd,MACfI,YAAa,EAAKe,gBAClBb,YAAa,EAAKc,gBAClBZ,SAAU,EAAKa,cALVP,EAAQT,SAYjC,cAACJ,EAAA,EAAD,CACIC,QAAQ,UACRC,QAASmB,KAAKN,YAFlB,0B,GAtDMO,a,gBCpBPC,EAZA,WACX,OACI,cAAC,IAAD,CAAK1B,GAAG,QAAQI,QAAQ,QAAxB,SACI,cAACuB,EAAA,EAAD,UACI,cAAC,IAAIC,MAAL,CAAWC,KAAK,IAAhB,SACI,+CCOLC,E,4JAVd,WACG,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALU2B,aCOHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c4dafa1c.chunk.js","sourcesContent":["import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\n\n// Settting up some custom styling\nconst classes = {\n    custom: {\n        marginLeft: \"15px\",\n        fontSize: \"20px\"\n    },\n    myBadge: {\n        padding: \"10px\",\n        fontSize: \"20px\"\n    }\n}\n\nconst CounterList = (props) => {\n    return (\n        <li className = \"list-unstyled p-2\">\n            <Badge bg = \"primary\" style={ classes.myBadge }>\n                {props.value}\n            </Badge>\n\n            <Button\n                variant = \"warning\"\n                style = {classes.custom}\n                onClick = {() => props.onIncrement(props.id)}\n            >\n                +\n            </Button>\n            <Button\n                variant=\"warning\"\n                style = {classes.custom}\n                onClick = {() => props.onDecrement(props.id)}\n                disabled = {props.value === 0 ? true : false}\n            >\n                -\n            </Button>\n            <Button\n                variant = \"danger\"\n                style = {classes.custom}\n                onClick = {() => props.onDelete(props.id)}\n            >\n                Delete\n            </Button>\n        </li>\n    );\n}\n\nexport default CounterList;","import {React, Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport CounterList from './counter-list.component';\n\n// Initial values for our state\nconst INITIAL_STATE = [\n    {id: 0, value: 0},\n    {id: 1, value: 0},\n    {id: 2, value: 0},\n    {id: 3, value: 0},\n    {id: 4, value: 0}\n]\n\n// Function to travers the counters state\nfunction traverseStateCounters(state, id, type) {\n    const counter = state.map(counter => {\n        if( counter.id === id ) {\n            // Handles the increment, decrement and delete operations\n            switch( type ) {\n                case 'INCREMENT':\n                    return { id: id, value: counter.value + 1 };\n                case 'DECREMENT':\n                    return { id: id, value: counter.value - 1 };\n                case 'DELETE':\n                    return { id: id, value: 0 };\n                default:\n                    return counter;\n            }\n        }\n        else\n            return counter;\n    });\n\n    return counter;\n}\n\nclass Counter extends Component {\n    constructor() {\n        super();\n        this.state = {\n          counters: INITIAL_STATE\n        }\n    }\n\n    // Resetting to the initial state\n    handleReset = () => {\n        this.setState({ counters: INITIAL_STATE });\n    }\n\n    // Function to handle the increment \n    handleIncrement = (id) => {\n        this.setState({\n            counters: traverseStateCounters(this.state.counters, id, \"INCREMENT\")\n        });\n    }\n\n    // Function to handle the decrement\n    handleDecrement = (id) => {\n        this.setState({\n            counters: traverseStateCounters(this.state.counters, id, \"DECREMENT\")\n        });\n    }\n\n    // Function to handle the delete\n    handleDelete = (id) => {\n        this.setState({\n            counters: traverseStateCounters(this.state.counters, id, \"DELETE\")\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column align-items-center\">\n                <ul className=\"mt-4\">\n                    {\n                        this.state.counters.map((counter) => {\n                            return (\n                                <CounterList \n                                    key={counter.id}\n                                    id={counter.id}\n                                    value={counter.value}\n                                    onIncrement={this.handleIncrement}\n                                    onDecrement={this.handleDecrement}\n                                    onDelete={this.handleDelete}\n                                />\n                            )\n                        })\n                    }\n                </ul>\n\n                <Button\n                    variant=\"primary\"\n                    onClick={this.handleReset}\n                >\n                    Reset\n                </Button>\n            </div>\n        );\n    }\n};\n\nexport default Counter;","import React from 'react';\nimport Nav from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Navbar = () => {\n    return (\n        <Nav bg=\"light\" variant=\"light\">\n            <Container>\n                <Nav.Brand href=\"#\">\n                    <h2>Navbar</h2>\n                </Nav.Brand>\n            </Container>\n        </Nav>\n    );\n}\n\nexport default Navbar;","import { React, Component } from 'react';\nimport Counter from './components/counter.component';\nimport Navbar from './components/navbar.component';\n\n\nclass App extends Component {\n\trender() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Counter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}